# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""recipe """
type Recipe {
  id: ID!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

type Subscribed {
  id: Int!
  user_id: Int!
  explain: String!
  price: Int!
  isSubscribed: Boolean
}

type Category {
  id: Float!
  name: String!
  employee: Employee!
  employeeId: Float
}

type Employee {
  id: Float!
  firstname: String!
  lastname: String!
  designation: String!
  city: String
  project: Project
  projectId: Float
  categories: [Category!]
}

type Project {
  id: Float!
  name: String!
  code: Int!
  employees: Employee
}

type Book {
  id: ID!
  title: String!
  isbn: String!
  author: Author!
}

type Author {
  id: ID!
  name: String!
  books: [Book!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
  subscribed(id: Float!): Subscribed
  findOneProject(id: Int!): Project!
  findAllProjects: [Project!]!
  findAllEmployee: [Employee!]!
  findOneEmployee(id: Int!): Employee!
  category(id: Int!): Category!
  authors: [Author!]!
  books: [Book!]!
  book(input: FindBookInput!): Book!
}

input FindBookInput {
  id: Int!
}

type Mutation {
  addRecipe(newRecipeData: CreateRecipeDto!): Recipe!
  removeRecipe(id: String!): Boolean!
  createSubscribed(createSubscribedInput: CreateSubscribedInput!): Subscribed!
  updateSubscribed(updateSubscribedInput: UpdateSubscribedInput!): Subscribed!
  removeSubscribed(deleteSubscribeInput: DeleteSubscribeInput!): Subscribed!
  createProject(createProjectInput: CreateProjectInput!): Project!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  removeProject(id: Int!): Project!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): Employee!
  removeEmployee(id: Int!): Employee!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createBook(input: CreateBookInput!): Book!
}

input CreateRecipeDto {
  title: String!
  description: String
  ingredients: [String!]!
}

input CreateSubscribedInput {
  """Example field (subs id = 2333)"""
  user_id: Int!

  """Example field (subs explain = the user decision for subs)"""
  explain: String!

  """Example field (subs price = 2000)"""
  price: Int!

  """Example field (subs subscribed = true)"""
  isSubscribed: Boolean!
}

input UpdateSubscribedInput {
  """Example field (subs id = 2333)"""
  user_id: Int

  """Example field (subs explain = the user decision for subs)"""
  explain: String

  """Example field (subs price = 2000)"""
  price: Int

  """Example field (subs subscribed = true)"""
  isSubscribed: Boolean
  id: Int!
}

input DeleteSubscribeInput {
  id: Float!
}

input CreateProjectInput {
  name: String!
  code: Int!
}

input UpdateProjectInput {
  name: String!
  code: Int!
  id: Float!
}

input CreateEmployeeInput {
  firstname: String!
  lastname: String!
  designation: String!
  city: String
}

input UpdateEmployeeInput {
  firstname: String!
  lastname: String!
  designation: String!
  city: String
  id: Float!
}

input CreateCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateBookInput {
  id: ID!
  title: String!
  isbn: String!
  author: Int!
}

type Subscription {
  recipeAdded: Recipe!
}